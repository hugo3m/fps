DONE

	Modify the index server so it defines the world dimensions and grid size.

	I think it's important to generalize the definition of the world into zones.

	The zones map to world databases.

	Each zone is defined as a collection of one or more convex volumes.

	This should be generic enough to loosely define any zone shape.

	Bring in code for read/write uint32 uint64, etc. with *int index

	Implement code to serialize the world.

	Extend so zones have origins

	Implement code in the player server to request the world data and receive the response

	Rename world database to zone database

	Implement code to generate the set of zones and world AABB for a grid cell world.

TODO
	
	zones need an id

	-----------

	Zone database connects to index server, and either says, give me any zone (zoneId=0), or give me a specific zone.

	Zone database gets the world data down from the index server, and then stores its own zone for fast lookup.

	-----------

	I like the idea of having a constant time lookup in a static structure, eg. a grid for taking a position and getting the set of world database zones that are subscribed.

	-----------

	Player servers need an update per-second for world database servers

	-----------

	This way I can just spam world database instances and they will autoassign on join.

	-----------

	World server keeps track of which player server a player is on, via the player shallow state update.

	Hack up world server raycast (pick random player)

	When player is returned pass tag + session id

	-----------

	Implement damage player

	-----------
