DONE

	Modify the index server so it defines the world dimensions and grid size.

	I think it's important to generalize the definition of the world into zones.

	The zones map to world databases.

	Each zone is defined as a collection of one or more convex volumes.

	This should be generic enough to loosely define any zone shape.

	Bring in code for read/write uint32 uint64, etc. with *int index

	Implement code to serialize the world.

	Extend so zones have origins

	Implement code in the player server to request the world data and receive the response

	Rename world database to zone database

	Implement code to generate the set of zones and world AABB for a grid cell world.

	zones need an id

	Fix various bugs setting up grid world zones

	Zone database connects to index server

	Zone database gets the world data down from the index server

	Add new connect/disconnect messages for zone database

	Make sure disconnect is sent on ctrl-c on zone database

	Zone database passes zoneId param to connect, give me any zone (zoneId=0), or give me a specific zone.

	A free zone is selected on connect if zero zone id is passed in, otherwise if zone is already free, disconnect the client.

	Remove concept of player server "tag" and uniformly rename to id

TODO

	Implement a constant time lookup from position -> zone ids via a low resolution grid.

	-----------

	As player moves track the set of zones overlapping

	-----------

	I like the idea of having a constant time lookup in a static structure, eg. a grid for taking a position and getting the set of world database zones that are subscribed.

	-----------

	This way I can just spam world database instances and they will autoassign on join.

	-----------

	World server keeps track of which player server a player is on, via the player shallow state update.

	Hack up world server raycast (pick random player)

	When player is returned pass tag + session id

	-----------

	Implement damage player

	-----------
